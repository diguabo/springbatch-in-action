<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<job id="importProducts" xmlns="http://www.springframework.org/schema/batch">
		<step id="downloadStep" next="someFileDownloadedDecision">
			<tasklet ref="downloadTasklet" />
		</step>
		<decision id="someFileDownloadedDecision" decider="fileExistsDecider">
			<end on="NO FILE" />
			<next on="FILE EXISTS" to="decompressStep" />
		</decision>
		<step id="decompressStep" next="verifyStep">
			<tasklet ref="decompressTasklet" />
		</step>
		<step id="verifyStep" next="readWriteStep">
			<tasklet ref="verifyTasklet" />
		</step>
		<step id="readWriteStep">
			<tasklet ref="readWriteProductsTasklet" />
		</step>
	</job>
	
	<bean id="batchService" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="com.manning.sbia.ch11.batch.BatchService" />
	</bean>
	
	<bean id="fileExistsDecider" class="com.manning.sbia.ch11.batch.FileExistsDecider">
		<property name="batchService" ref="batchService" />
	</bean>
	
	<bean id="downloadTasklet" class="com.manning.sbia.ch11.batch.DownloadTasklet" scope="step">
		<property name="batchService" ref="batchService" />
		<property name="targetFile" value="#{jobParameters['archiveFile']}" />
	</bean>
	
	<bean id="decompressTasklet" class="com.manning.sbia.ch11.batch.DecompressTasklet" scope="step">
		<property name="batchService" ref="batchService" />
		<property name="inputFile" value="#{jobParameters['archiveFile']}" />
		<property name="outputDirectory" value="#{jobParameters['workingDirectory']}" />
	</bean>
	
	<bean id="verifyTasklet" class="com.manning.sbia.ch11.batch.VerifyTasklet" scope="step">
		<property name="batchService" ref="batchService" />
		<property name="outputDirectory" value="#{jobParameters['workingDirectory']}" />
		<property name="importMetadataHolder" ref="importMetadataHolder" />
	</bean>
	
	<bean id="importMetadataHolder" class="com.manning.sbia.ch11.batch.ImportMetadataHolder" />
	
	<bean id="readWriteProductsTasklet" class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="org.springframework.batch.core.step.tasklet.Tasklet" />
	</bean>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:sbia_ch11;DB_CLOSE_DELAY=-1" />
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="suppressClose" value="true" />
	</bean>

</beans>
